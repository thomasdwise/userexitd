1. BUILDING USEREXITD

	If you've downloaded one of the binary packages you can skip
	this section.

1.0 	Prerequisites: TSM server, expat library (libexpat.a,
    	it is available from http://expat.sourceforge.net)

    	The TSM client API is not needed, only userExitSample.h and 
    	userExitSample.c from the server distribution. 

    	Sources for userexit.so shared library are derived from the sample
    	(userExitSample.c), which does not seem to have a free license.
    	Therefore I distribute patches (userexit.OS.patch) to make userexit.c
    	from IBM's userExitSample.c code.  

    	untar the distribution tarball

	$ gunzip -c  userexitd-VERSION-src.tar.gz |tar -xf -

    	change to the distribution directory

	$ cd userexitd-VERSION

1.1 	Edit the makefile to reflect your system settings. If you have GNU make 
	edit Makefile, otherwise edit sunos.mak or aix.mak. You may want to 
	change the location of your TSM instance or some other options.

	Specifically, you may want to change these variables
	TSMDIR	to reflect location of TSM server binary directory
	CC_INCLUDES to reflect location of libexpat headers
	LIBEXPAT to point to the expat library
	SONAMES	(on AIX) which userexit modules build: 32 or 64 bit, or both

1.2 	run make 
	
	# if you have GNU make
	$ make  

	# if you have solaris make on Solaris
	$ make -f sunos.mak

	# if you have aix make on AIX
	$ make -f aix.mak
 
	If everything went OK, now we have built the userexitd and userexit.so
	(and userexit64.so if on AIX) binaries. Go to 2.1  


2. INSTALLING USEREXITD AND USEREXIT.SO
	
2.0 	Prerequisites to install from binary package: TSM server installed. 

	Untar the binary distribution 

	$ gunzip -c userexitd-VERSION-OS-CPU.tar.gz |tar -xf -
	
	change to distribution directory

	$ cd userexitd-VERSION

	Edit the makefile to reflect your system settings. If you have GNU make 
	edit Makefile, otherwise edit sunos.mak or aix.mak. You may want to 
	change the location of your TSM instance or some other options.     

2.1     run (probably as root) make install to install binaties and 
	configuration sample.
	
	if you have GNU make
	
	# make install

	otherwise 
	# make -f aix.mak install
	or
	# make -f sunos.mak install

	AIX NOTE

	Under AIX there are two versions of TSM server: 32 bit and 
	64 bit. So you need a matching userexit shared library, the 64-bit
	one will be built as userexit64.so, the 32-bit one will be build 
	as userexit.so

2.2     copy userexitd.conf.sam to userexitd.conf, read comments
	and edit userexitd.conf as you see fit.

	# cp /opt/tivoli/tsm/server/bin/userexitd.conf.sam /opt/tivoli/tsm/server/bin/userexitd.conf

2.3	check validity of configuration
		
	# /opt/tivoli/tsm/server/bin/userexitd -f
	configuration seems to be OK!
	#

2.4     Start userexitd process in debug mode. -d parameter overrides 
	<background/> and <logging/> settings from the configuration file.
	
	# /opt/tivoli/tsm/server/bin/userexitd -d
	...
	[skipped lots of messages]
	...
	debug: pidfile='/var/run/userexitd.pid'
	debug: sockpath='/var/run/userexitd.sock'
	
	it should print lots of debugging info and stop, waiting for a packet 
	from the shared library

2.5	Add the following line to your dsmserv.opt to load the shared 
	library at server start

	USEREXIT YES userexit.so

	or (for 64-bit TSM on AIX)
	USEREXIT YES userexit64.so


	halt and start the TSM server.

	when starting it should print on console
	
	userexit: Initializing
	userexit: messages will go to unix:/var/run/userexitd.sock
	userexit: initialized

	The location of the socket may be set via the USEREXITD_ADDRESS
	environment variable

2.6 	Execute the following commands as TSM administrator to enable logging 
	of ALL (you may want to change this) events to the user exit shared 
	library

	ENABLE EVENTS USEREXIT ALL

	now TSM will start sending events to the userexitd daemon, you should
	see userexitd printing debug messages as it processes events.

	...
	debug:
	got 3404 bytes!	
	debug: packet version: 2
	debug: eventNum: 2017
	...

2.7	Write and debug your rules in the configuration file (see commments in 
	the configuration file)

2.8	Absense of a running userexitd daemon does not affect operation of TSM 
	server.

2.9	Configure automatic startup of userexitd without the debug option (-d)
	(see your operating system administrator's guide). 
	Probably it should start before your TSM server. 


3. COMMAND LINE ARGUMENTS FOR USEREXITD

	Usage: userexitd [-v] [-h] [-f] [-c file] [-d]
        	-c file         configuration file
	        -d              debug mode
        	-f              check configuration
	        -h              print help
        	-v              print version


4. THE COMMUNICATION SOCKET

4.1 	The default is to use the unix domain socket /var/run/userexitd.sock

4.2 	You may change this using <listen address="..."/> elemenet in userexitd.conf
	for userexitd and USEREXITD_ADDRESS environment variable for the userexit.so. 

	The format of address specification is one of

	unix:/socket_path 			for local socket
	udp:hostname_or_IP_address:port		for UDP socket

4.3	IMPORTANT WARNING!
	
	Using of UDP protocol IS NOT CURRENTLY RECOMMENDED because
	of the security and reliability problems: no access control for incoming 
	UDP packets and no mechanism to retransmit lost packets. Please use local
	address (127.0.0.1) or set up iptables/ipfilter/ipsec/whatever your OS has if 
	you have to use UDP over the network. If you use local IP address (127.0.0.1) you
	should not have any non trusted interactive users on your host.
	
	YOU HAVE BEEN WARNED! 

